apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt' // For annotation processing.

android {

    compileSdkVersion rootProject.ext.android_compile_sdk_version
    buildToolsVersion rootProject.ext.android_build_tools_version

    defaultConfig {
        minSdkVersion rootProject.ext.android_min_sdk_version
        targetSdkVersion rootProject.ext.android_target_sdk_version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Robolectric setup.
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {

    def cacheDependencies = rootProject.ext.cacheDependencies
    def cacheTestDependencies = rootProject.ext.cacheTestDependencies


//    implementation project(':data')

    implementation cacheDependencies.javaxInject
    implementation cacheDependencies.kotlin

    kapt cacheDependencies.roomCompiler

    // RoomDatabase is part of the public API since your AppDatabase extends it and you presumably use that class
    // in your downstream dependencies. However RoomDatabase is declared as a implementation-only dependency.
    // This means that the class isn't normally available for the downstream dependencies during compilation.
    api cacheDependencies.roomRuntime

    implementation cacheDependencies.roomRxJava
    implementation cacheDependencies.rxKotlin


    testImplementation cacheTestDependencies.archTesting
    testImplementation cacheTestDependencies.kotlinJUnit
    testImplementation cacheTestDependencies.mockito
    testImplementation cacheTestDependencies.robolectric
    testImplementation cacheTestDependencies.roomTesting
    testImplementation cacheTestDependencies.testCore

}
