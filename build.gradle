// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext{
        kotlin_version = "1.6.10"
        koin_version = '3.1.2'

        android_min_sdk_version = 23
        android_target_sdk_version = 31
        android_compile_sdk_version = 31
        android_build_tools_version = "30.0.2"

        // Libraries
        // Adds support for the Action Bar user interface design pattern.
        app_compat_version = '1.1.0'
        // ViewGroup which allows you to position and size widgets in a flexible way.
        constraint_layout_version = '1.1.3'
        espresso_version = '3.2.0'
        // An HTTP & HTTP/2 client for Android and Java applications.
        okhttp_version = '4.2.2'
        retrofit_version = '2.7.0'          // HTTP client Retrofit.

        rx_android_version = '2.1.1'        // Reactive extensions for Android.
        rx_java_version = '2.2.16'           // RxJava.
        rx_kotlin_version = '2.4.0'         // RxKotlin.

        javax_inject_version = '1'          // The Javax Inject API.
        room_version = '2.2.4'              // Room is a database object mapping library.
        material_version = '1.5.0'
        security_crypto_version = '1.1.0-alpha03'
        glide_version = '4.12.0'
        lifecycle_version = '2.1.0'
        recyclerview_version = '1.1.0'
        gson = '2.8.9'

        // Testing
        arch_testing = '2.1.0'
        mockito_version = '3.2.4'
        mockito_android_version = '3.2.4'
        // Robolectric is the industry-standard unit testing framework for Android.
        robolectric_version = '4.3.1'
        // The AndroidX Test Library provides an extensive framework for testing Android apps.
        test_core_version = '1.2.0'
        test_rules_version = '1.2.0'        // Android testing library's rules.
        test_runner_version = '1.2.0'       // Android testing library's runner.

        domainDependencies = [
                javaxInject: "javax.inject:javax.inject:${javax_inject_version}",
                kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxJava     : "io.reactivex.rxjava2:rxjava:${rx_java_version}",
                rxKotlin   : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        domainTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

        dataDependencies = [
                javaxInject: "javax.inject:javax.inject:${javax_inject_version}",
                kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                rxKotlin   : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        dataTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

        remoteDependencies = [
                javaxInject      : "javax.inject:javax.inject:${javax_inject_version}",
                kotlin           : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                okHttp           : "com.squareup.okhttp3:okhttp:${okhttp_version}",
                okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:${okhttp_version}",
                rxKotlin         : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}",
                retrofit         : "com.squareup.retrofit2:retrofit:${retrofit_version}",
                retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}",
                retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofit_version}",
                gson            : "com.google.code.gson:gson:${gson}",
        ]

        remoteTestDependencies = [
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}"
        ]

        cacheDependencies = [
                javaxInject : "javax.inject:javax.inject:${javax_inject_version}",
                kotlin      : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                roomCompiler: "androidx.room:room-compiler:${room_version}",
                roomRuntime : "androidx.room:room-runtime:${room_version}",
                roomRxJava  : "androidx.room:room-rxjava2:${room_version}",
                rxKotlin    : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}",
                securityCrypto     : "androidx.security:security-crypto:${security_crypto_version}",
                gson        : "com.google.code.gson:gson:${gson}",
        ]

        cacheTestDependencies = [
                archTesting  : "androidx.arch.core:core-testing:${arch_testing}",
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}",
                robolectric  : "org.robolectric:robolectric:${robolectric_version}",
                roomTesting  : "androidx.room:room-testing:${room_version}",
                testCore     : "androidx.test:core:${test_core_version}",
        ]

        presentationDependencies = [
                javaxInject        : "javax.inject:javax.inject:${javax_inject_version}",
                kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                lifecycleCompiler  : "androidx.lifecycle:lifecycle-compiler:${lifecycle_version}",
                lifecycleExtensions: "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}",
                rxKotlin           : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}"
        ]

        presentationTestDependencies = [
                archTesting  : "androidx.arch.core:core-testing:${arch_testing}",
                kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito      : "org.mockito:mockito-core:${mockito_version}",
                robolectric  : "org.robolectric:robolectric:${robolectric_version}"
        ]


        uiDependencies = [
                appCompat          : "androidx.appcompat:appcompat:${app_compat_version}",
                constraintLayout   : "androidx.constraintlayout:constraintlayout:${constraint_layout_version}",
                koinCore           : "io.insert-koin:koin-core:$koin_version",
                koinAndroid        : "io.insert-koin:koin-android:$koin_version",
                koinCompat         : "io.insert-koin:koin-android-compat:$koin_version",
                koinWorkManager    : "io.insert-koin:koin-androidx-workmanager:$koin_version",
                koinCompose        : "io.insert-koin:koin-androidx-compose:$koin_version",
                koinTest           : "io.insert-koin:koin-test:$koin_version",
                koinTestJunit      : "io.insert-koin:koin-test-junit4:$koin_version",
                javaxInject        : "javax.inject:javax.inject:${javax_inject_version}",
                kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}",
                lifecycleCompiler  : "androidx.lifecycle:lifecycle-compiler:${lifecycle_version}",
                lifecycleExtensions: "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}",
                recyclerView       : "androidx.recyclerview:recyclerview:${recyclerview_version}",
                rxAndroid          : "io.reactivex.rxjava2:rxandroid:${rx_android_version}",
                rxKotlin           : "io.reactivex.rxjava2:rxkotlin:${rx_kotlin_version}",
                material           : "com.google.android.material:material:${material_version}",
                securityCrypto     : "androidx.security:security-crypto:${security_crypto_version}",
                glide              : "com.github.bumptech.glide:glide:${glide_version}",
                glideComplier      : "com.github.bumptech.glide:compiler:${glide_version}",
                glideIntegration   : "com.github.bumptech.glide:okhttp3-integration:${glide_version}",
                okHttp           : "com.squareup.okhttp3:okhttp:${okhttp_version}",
                okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:${okhttp_version}",
                retrofit         : "com.squareup.retrofit2:retrofit:${retrofit_version}",
                retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}",
                retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofit_version}"
        ]

        uiTestDependencies = [
                koinCore           : "io.insert-koin:koin-core:$koin_version",
                koinAndroid        : "io.insert-koin:koin-android:$koin_version",
                koinCompat         : "io.insert-koin:koin-android-compat",
                koinWorkManager    : "io.insert-koin:koin-androidx-workmanager:$koin_version",
                koinCompose        : "io.insert-koin:koin-androidx-compose:$koin_version",
                koinTest           : "io.insert-koin:koin-test:$koin_version",
                koinTestJunit      : "io.insert-koin:koin-test-junit4:$koin_version",
                espresso           : "androidx.test.espresso:espresso-core:${espresso_version}",
                espressoContrib    : "androidx.test.espresso:espresso-contrib:${espresso_version}",
                kotlinJUnit        : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
                mockito            : "org.mockito:mockito-core:${mockito_version}",
                mockitoAndroid     : "org.mockito:mockito-android:${mockito_android_version}",
                testCore           : "androidx.test:core:${test_core_version}",
                testRules          : "androidx.test:rules:${test_rules_version}",
                testRunner         : "androidx.test:runner:${test_runner_version}"
        ]
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}